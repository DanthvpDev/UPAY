USE MASTER
GO
USE PLANILLAS_DANIELH
GO
/*
	TRIGGER QUE VALIDA QUE SE ESTÉ INSERTANDO UN EMPLEADO CON TÍTULO UNIVERSITARIO
	EN UN PUESTO DE CATEGORIA 2
*/
CREATE OR ALTER TRIGGER TR_CATEGORIA2_TITULO_UNIVERSITARIO
ON NOMBRAMIENTOS AFTER INSERT 
AS
	BEGIN 	
		IF EXISTS(SELECT 1
			FROM inserted I
			JOIN PUESTOS P ON I.PUESTO_ID = P.ID 
			LEFT JOIN (
				SELECT EMPLEADO_ID
				FROM CARRERA_PROFESIONAL CP
				INNER JOIN GRADOS_ACADEMICOS GA
				ON GA.ID = CP.GRADO_ID
				WHERE GA.CATEGORIA = 2
			) AS EmpleadoUni on I.EMPLEADO_ID = EmpleadoUni.EMPLEADO_ID
			WHERE CATEGORIA = 2 AND EmpleadoUni.EMPLEADO_ID IS NULL)
		   BEGIN
			RAISERROR('EL EMPLEADO NO TIENE UN TÍTULO UNIVERSITARIO REGISTRADO POR LO QUE NO CUMPLE CON LOS REQUERIMIENTOS MÍNIMOS PARA SER NOMBRADO', 16, 1);
			ROLLBACK TRANSACTION;
		   END
	END


	select * from PUESTOS

	GO


/*
	TRIGGER QUE VERIFICA QUE SI EL GRADO CORRESPONDE A UN 
	GRADO MENOR A UNIVERSITARIO CAMBIE LA CATEGORIA A 1 
	O SI GRADO UNIVERSITARIO CAMBIE LA CATEGORIA A 2
*/

CREATE OR ALTER TRIGGER TR_VERIFICAR_GRADO_CATEGORIA_TITULO
ON GRADOS_ACADEMICOS AFTER INSERT
AS 
BEGIN
	
	UPDATE GA
			SET GA.CATEGORIA = 1
			FROM GRADOS_ACADEMICOS GA
			INNER JOIN inserted I ON GA.ID = I.ID
			WHERE (I.GRADO = 'CERT' OR I.GRADO = 'CURS') AND I.CATEGORIA > 1;
	
	UPDATE GA
			SET GA.CATEGORIA = 2
			FROM GRADOS_ACADEMICOS GA
			INNER JOIN inserted I ON GA.ID = I.ID
			WHERE (I.GRADO = 'BACH' OR I.GRADO = 'DIPL' OR I.GRADO = 'LICI' OR I.GRADO = 'MAES' OR I.GRADO = 'DOCT') AND I.CATEGORIA < 2;

END
GO



/*
	Trigger que agrega los puntos correspondientes a cada uno de los tìtulos conseguidos
*/
CREATE OR ALTER TRIGGER TR_VERIFICAR_PUNTOS_TITULO
ON GRADOS_ACADEMICOS AFTER INSERT
AS 
BEGIN

	UPDATE GA
	SET GA.PUNTOS = 0
	FROM GRADOS_ACADEMICOS GA
	INNER JOIN inserted I ON GA.ID = I.ID
	WHERE I.GRADO = 'CURS'
	
	UPDATE GA
	SET GA.PUNTOS = 1
	FROM GRADOS_ACADEMICOS GA
	INNER JOIN inserted I ON GA.ID = I.ID
	WHERE I.GRADO = 'CERT' OR I.GRADO = 'DIPL'

	UPDATE GA
	SET GA.PUNTOS = 2
	FROM GRADOS_ACADEMICOS GA
	INNER JOIN inserted I ON GA.ID = I.ID
	WHERE I.GRADO = 'BACH'

	UPDATE GA
	SET GA.PUNTOS = 3
	FROM GRADOS_ACADEMICOS GA
	INNER JOIN inserted I ON GA.ID = I.ID
	WHERE I.GRADO = 'LICI'

	UPDATE GA
	SET GA.PUNTOS = 4
	FROM GRADOS_ACADEMICOS GA
	INNER JOIN inserted I ON GA.ID = I.ID
	WHERE I.GRADO = 'MAES' OR I.GRADO = 'DOCT'

END
GO

CREATE OR ALTER TRIGGER TR_DESACTIVAR_AJUSTE_NUEVO_VALOR
ON AJUSTES_SALARIALES AFTER INSERT
AS 
BEGIN 
    UPDATE AJS
    SET AJS.ESTADO = 'INA',
        AJS.FECHA_FIN = GETDATE()
    FROM AJUSTES_SALARIALES AJS
    INNER JOIN INSERTED I
    ON AJS.DESCRIPRCION = I.DESCRIPRCION
    WHERE AJS.ESTADO = 'ACT'
      AND AJS.ID != I.ID; 
END
GO



/*
	TRIGGER QUE IMPIDE QUE SE DUPLIQUEN NOMBRAMIENTOS
*/

--CREATE OR ALTER TRIGGER TR_VERIFICAR_NOMBRAMIENTO_DUPLICADO
--ON NOMBRAMIENTOS AFTER INSERT
--AS
--BEGIN
--	IF EXISTS(SELECT 1 
--			  FROM inserted I INNER JOIN NOMBRAMIENTOS N 
--			  ON N.EMPLEADO_ID = I.EMPLEADO_ID 
--			  WHERE N.ESTADO = 'ACT' AND N.PUESTO_ID = I.PUESTO_ID)
--			  BEGIN
--				RAISERROR('EL EMPLEADO YA TIENE ESTE NOMBRAMIENTO', 16, 2);
--				ROLLBACK  TRANSACTION;
--			  END
--END
--GO

